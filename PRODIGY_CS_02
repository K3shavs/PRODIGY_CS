from PIL import Image 

def process_image(image_path, key, output_path):
    try:
        img = Image.open(image_path)
        pixels = img.load()
    except Exception as e:
        print(f"Error opening image: {e}")
        return

    width, height = img.size
    
    # Process each pixel
    for x in range(width):
        for y in range(height):
            if img.mode == 'RGB':
                r, g, b = pixels[x, y]
                # Apply XOR to each color channel
                pixels[x, y] = (r ^ key, g ^ key, b ^ key)
            elif img.mode == 'L':  # Grayscale
                val = pixels[x, y]
                pixels[x, y] = val ^ key

    try:
        img.save(output_path)
        print(f"Operation completed successfully. Image saved to {output_path}")
    except Exception as e:
        print(f"Error saving image: {e}")

if __name__ == "__main__":
    print("=== Image Encryption Tool ===")
    image_path = input("Enter image path: ")
    output_path = input("Enter output path: ")
    operation = input("Encrypt or Decrypt? (e/d): ").lower()
    
    while True:
        try:
            key = int(input("Enter encryption key (0-255): "))
            if 0 <= key <= 255:
                break
            print("Key must be between 0-255")
        except ValueError:
            print("Please enter a valid integer")

    process_image(image_path, key, output_path)
